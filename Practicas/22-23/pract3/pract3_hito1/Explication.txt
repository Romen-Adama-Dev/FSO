Archivo: multihilos.c
Creado: 09-06-2023 12:00:00
Autor: Romen Adama Caetano Ramirez

Programa que reserva y libera asientos de forma concurrente.

Librerías de C:
- Incluye las librerías necesarias para el funcionamiento del programa, como las librerías de entrada/salida estándar (stdio.h), manejo de memoria (stdlib.h), llamadas al sistema (unistd.h), hilos (pthread.h) y tipos de datos enteros de ancho fijo (stdint.h).
- También incluye los archivos de cabecera "sala.h" y "retardo.h".

Variables globales definidas:
- Define constantes para el número de asientos y el número máximo de reservas.

Variables globales declaradas:
- Declara un array de asientos para mantener el estado de los asientos de la sala.

Función reserva_y_libera:
- Función ejecutada por cada hilo.
- Realiza reservas y liberaciones de asientos de forma concurrente.
- Genera un ID aleatorio y reserva asientos mientras haya disponibilidad.
- Luego, libera los asientos reservados.
- Utiliza un mutex para sincronizar el acceso a la sala y evitar problemas de sección crítica.

Función muestra_estado_sala:
- Función ejecutada por un hilo separado para mostrar el estado de la sala de forma periódica.
- Muestra el estado de cada asiento de la sala utilizando la función estado_asiento de la API.
- Utiliza un mutex para sincronizar el acceso a la sala y evitar problemas de sección crítica.

Para la función reserva_y_libera:
- Se utilizaron hilos para forzar el problema de la seccion critica, no sabia porque no fallaba sin forzar el orden aplicando concurrencia. 

Función main:
- Punto de entrada del programa.
- Verifica el número de argumentos pasados al programa.
- Convierte el argumento a entero para obtener el número de hilos.
- Crea el array de hilos y la sala.
- Inicializa el mutex.
- Crea el hilo para mostrar el estado de la sala.
- Crea los hilos para realizar las reservas y liberaciones.
- Espera a que los hilos terminen.
- Cancela el hilo que muestra el estado de la sala.
- Destruye el mutex.
- Elimina la sala y finaliza el programa.
